<<<<<<< HEAD
{"colors":[{"id":"58d9caee-6ea6-4d7b-9984-65b145031979","title":"Lawn","color":"#67bf4f","rating":5,"timestamp":"Thu Mar 10 2016 01:11:12 GMT-0800 (PST)"},{"id":"b3e5b63c-d203-4970-a5a3-4772ce3ec997","title":"jet","color":"#000000","timestamp":"Thu Sep 22 2016 17:17:40 GMT-0700 (PDT)","rating":4},{"id":"6e42b800-3929-4581-a170-6fd2398cdca0","title":"purple","color":"#8000ff","timestamp":"Thu May 24 2018 18:47:10 GMT-0400 (Eastern Daylight Time)","rating":2}],"linksQa":{"additionOnlyCode":"a","timestamp":"Tue Jul 24 2018 23:01:44 GMT-0400 (Eastern Daylight Time)","linksQa":{"error":null,"output":{"stdout":"c:/Users/john.DCLABNT/projects/sw/p27174/links_qa.pl: 2018-07-24 11:01:44 PM\r\nscalar( @ARGV ) = 4...\r\nARGV[0] = \"-pG:\\p27174\\AUS-CONS-ACTS\"\r\nARGV[1] = \"-ia\"\r\nARGV[2] = \"-dINFO\"\r\nARGV[3] = \"-t\"\r\nLet off some steam, Bennett!\r\n","stderr":""},"message":"Let off some steam, Bennett!"},"timestamp_begin_run":"Tue Jul 24 2018 23:01:44 GMT-0400 (Eastern Daylight Time)","timestamp_end_run":"Tue Jul 24 2018 23:01:44 GMT-0400 (Eastern Daylight Time)","basePath":"G:\\p27174\\AUS-CONS-ACTS"}}
=======
{"colors":[{"id":"58d9caee-6ea6-4d7b-9984-65b145031979","title":"Lawn","color":"#67bf4f","rating":5,"timestamp":"Thu Mar 10 2016 01:11:12 GMT-0800 (PST)"},{"id":"b3e5b63c-d203-4970-a5a3-4772ce3ec997","title":"jet","color":"#000000","timestamp":"Thu Sep 22 2016 17:17:40 GMT-0700 (PDT)","rating":4},{"id":"6e42b800-3929-4581-a170-6fd2398cdca0","title":"purple","color":"#8000ff","timestamp":"Thu May 24 2018 18:47:10 GMT-0400 (Eastern Daylight Time)","rating":1}],"linksQa":{"additionOnlyCode":"a","timestamp":"Tue Jul 10 2018 19:20:05 GMT-0400 (Eastern Daylight Time)","linksQa":{"error":null,"output":{"stdout":"[2018-07-10 19:20:05][INFO]: FALSE=0...\r\n[2018-07-10 19:20:05][INFO]: TRUE=1...\r\n[2018-07-10 19:20:05][INFO]: INFO=101...\r\n[2018-07-10 19:20:05][INFO]: INPUT_FILE_PARAM=\"Input file argument  \"...\r\n[2018-07-10 19:20:05][INFO]: OUTPUT_FILE_PARAM=\"Output file argument \"...\r\nlinks_qa VERSION 1.20.1 2018-07-09\r\n$program_arguments = { d => \"INFO\", i => \"a\", p => \"c:\\\\\", t => \"\" }...\r\nSetting $GBDebugTee to $TRUE = 1...[2018-07-10 19:20:05][INFO]: $PcsAdditionOnlyCode = \"a\"...\r\n[2018-07-10 19:20:05][INFO]: %ADDITION_ONLY_CODE_MAP = { 1 => \"ADDITION_ONLY\", 2 => \"IC_ONLY\" }...\r\n[2018-07-10 19:20:05][INFO]: %ALPHA_ADDITION_ONLY_CODE_MAP = {\r\n  a => \"ALPHA_ADDITION_ONLY_CODE_ADDITION_ONLY\",\r\n  c => \"ALPHA_ADDITION_ONLY_CODE_IC_ONLY_ALT\",\r\n  i => \"ALPHA_ADDITION_ONLY_CODE_IC_ONLY\",\r\n}...\r\n[2018-07-10 19:20:05][INFO]: $PcsUnitCode = undef()...\r\n[2018-07-10 19:20:05][INFO]: %PCS_LEGACY_PRODUCTION_CODE_MAP = {\r\n  \"0\" => \"LEGACY_FIRST_TIME\",\r\n  \"1\" => \"PRODUCTION_ADDITIONS_AND_CHANGES\",\r\n}...\r\n[2018-07-10 19:20:05][INFO]: $PcsLegacyProductionCode = 1 = PRODUCTION_ADDITIONS_AND_CHANGES...\r\n[2018-07-10 19:20:05][INFO]: $PcsAssemblyCode = 0 = DOES_NOT_REQUIRE_ASSEMBLY...\r\nSet JLogger level to INFO (4)...\r\ninitialize(): $JLogger->getDebug() = 4 = INFO...\r\n$GBDebugFilePath = \"\"...\r\n[2018-07-10 19:20:05][INFO]: $ISO_8601_DATE_REGEX = (?^:^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})Z$)...\r\n[2018-07-10 19:20:05][INFO]: iso_8601_date_test(): Using $ISO_8601_DATE_REGEX = (?^:^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})Z$)...\r\n[2018-07-10 19:20:05][INFO]: iso_8601_date_test(): i=0: iso_8601_date_valid(\"2018-03-20\") = 0...\r\n[2018-07-10 19:20:05][INFO]: iso_8601_date_test(): i=1: iso_8601_date_valid(\"2018-03-20T00:00:00Z\") = 1...\r\n[2018-07-10 19:20:05][INFO]: iso_8601_date_test(): i=2: iso_8601_date_valid(\"2018-03-20T00:00:00.000Z\") = 0...\r\n[2018-07-10 19:20:05][INFO]: testIsUkPraRulesGloss()...\r\n[2018-07-10 19:20:05][INFO]: main(): initialize() completed...\r\n[2018-07-10 19:20:05][INFO]: main(): links_qa 1.20.1 2018-07-09\r\n[2018-07-10 19:20:05][INFO]: main(): @NAUGHTY_CHARACTERS = [\"{\", \"}\", \"(\", \")\", \"\\$\", \"%\", \";\", \":\"]...\r\n[2018-07-10 19:20:05][INFO]: main(): %ALLOWED_SPECIAL_CHARACTERS_MAP = { 8211 => \"EN DASH or '\\xE2\\x80\\x93'\" }...\r\n[2018-07-10 19:20:05][INFO]: main(): %HUMAN_LABELLED_SPECIAL_CHARACTERS_MAP = { 160 => \"NO-BREAK SPACE\" }...\r\n[2018-07-10 19:20:05][INFO]: main(): %FIELD_MAP = {\r\n  \"0\" => \"Filename\",\r\n  \"1\" => \"Date\",\r\n  \"2\" => \"Uri\",\r\n  \"3\" => \"FileLocation\",\r\n  \"4\" => \"Description\",\r\n  \"5\" => \"ModifDate\",\r\n}...\r\n[2018-07-10 19:20:05][INFO]: main(): $B_AUTOMATIC_MODE appears to be FALSE, let's just run the base path supplied by the command-line: \"c:\\\"...\r\n[2018-07-10 19:20:05][INFO]: do_a_base_path(\"c:\\\"): Welcome to Japan, Mr. Bond...\r\n[2018-07-10 19:20:05][INFO]: do_a_base_path(\"c:\\\"): $basePath = \"c:\\\"...\r\n[2018-07-10 19:20:05][INFO]: do_a_base_path(\"c:\\\"): $LOCAL_ELG_OUTPUT_FILE_PATH = \"C:\\links_qa.elg\"...\r\n[2018-07-10 19:20:05][INFO]: do_a_base_path(\"c:\\\"): Opening $LOCAL_ELG_OUTPUT_FILE_PATH = \"C:\\links_qa.elg\" for appending...\r\n","stderr":"\"my\" variable $B_SEC_CDI masks earlier declaration in same scope at c:/Users/john/projects/p27174/links_qa.pl line 604.\r\n* FATAL * Could not open error log file C:\\links_qa.elg\r\n"},"message":"Let off some steam, Bennett!"},"timestamp_begin_run":"Tue Jul 10 2018 19:20:04 GMT-0400 (Eastern Daylight Time)","timestamp_end_run":"Tue Jul 10 2018 19:20:05 GMT-0400 (Eastern Daylight Time)","basePath":"c:\\"}}
>>>>>>> 207481e8ad097574486fd7d745fdcb73cb7a9572
